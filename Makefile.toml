[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
CARGO_MAKE_WORKSPACE_SKIP_MEMBERS = [ # "pkg/*",  # "member4" 
]
CARGO_MAKE_WORKSPACE_EMULATION = true
CARGO_MAKE_CRATE_WORKSPACE_MEMBERS = [ # "member1", # "member2" 
]

CWD="/Users/clp/p/z/il/"

OUT="/Users/clp/p/z/il/out/"
LLVM_SRC="/Users/clp/p/z/il/out/llvm/src/"
LLVM_OBJ="/Users/clp/p/z/il/out/llvm/obj/"
OUT_OBJ="/Users/clp/p/z/il/out/llvm/obj/"
OUT_LIB="/Users/clp/p/z/il/out/llvm/lib/"

CRATES="/Users/clp/p/z/il/crates/"
CRATES="/Users/clp/p/z/il/crates/"

PKG="/Users/clp/p/z/il/pkg/"
ISPEC="/Users/clp/p/z/il/pkg/ispec/"
IDOWN="/Users/clp/p/z/il/pkg/idown/"
IDPM="/Users/clp/p/z/il/pkg/idpm/"
IDPM="/Users/clp/p/z/il/pkg/idpm/"
ITASK="/Users/clp/p/z/il/pkg/itask/"
LOGOS="/Users/clp/p/z/il/pkg/logos/"
CC="zig cc "
CPP="zig c++"



[env.development]
DEV = true

[env.production]
PROD = true

[config]
load_cargo_aliases = true
init_task = "init"
end_task = "end"
on_error_task = "catch"

[tasks.init]

[tasks.end]

[tasks.catch]
script = '''
echo "Doing cleanups in catch"
'''

[tasks.status]
script = ['''  
echo PROFILE: ${PROFILE}
echo OUT:     ${OUT}
''']

[tasks.watch]
command = "echo"
args = [ "Triggered by watch" ]
watch = true

[tasks.watch-docs]
command = "echo"
args = [ "Triggered by watch" ]
watch = { postpone = true, no_git_ignore = true, ignore_pattern = "examples/files/*", watch = ["./docs/"] }

[tasks.cycle]
dependencies = [
	"out-dir"
    "rustfmt",
    "build",
	"move-to-out-dir"
    # "test"
]


[tasks.run]
command = "cargo"
args = ["run"]

[tasks.install]
command = ""
args = ["src/B/out", "src/C/static"]
dependencies = [
  { name = "compile", path = "src/B" },
  { name = "clean", path = "src/C/tasks.toml" },
]



[tasks.format]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--", "--emit=files"]

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.build-release]
command = "cargo"
args = ["build", "--release", "--all-features"]
dependencies = ["clean"]

[tasks.build]
command = "cargo"
args = ["build"]
dependencies = ["clean"]

[tasks.test]
command = "cargo"
args = ["test"]
dependencies = ["clean"]

[tasks.rustfmt]
command = "rustfmt"
install_crate = { 
	crate_name = "rustfmt-nightly", 
	rustup_component_name = "rustfmt-preview", 
	binary = "rustfmt", 
	test_arg = "--help" 
}

[tasks.out-dir]
command = "mkdir"
args = ["-p", "${OUT}", "${LLVM_SRC}", "${LLVM_OBJ}", "${OUT_OBJ}", "${OUT_LIB}" ]

[tasks.move-to-out-dir]
run-
command = "mv"
args = ["-p", "${OUT}", "${LLVM_SRC}", "${LLVM_OBJ}", "${OUT_OBJ}", "${OUT_LIB}" ]

[tasks.clean]
command = "rm"
args = ["-rf", "${OUT}", "${LLVM_SRC}", "${LLVM_OBJ}", "${OUT_OBJ}", "${OUT_LIB}" ]

[tasks.zig-build-main]
scrip = '''
''''
command = "zig"
args = ["build"]


